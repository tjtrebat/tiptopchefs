// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.tiptopchefs.web;

import com.tiptopchefs.domain.Menu;
import com.tiptopchefs.domain.MenuItem;
import com.tiptopchefs.domain.MenuItemOrder;
import com.tiptopchefs.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Menu, String> ApplicationConversionServiceFactoryBean.getMenuToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tiptopchefs.domain.Menu, java.lang.String>() {
            public String convert(Menu menu) {
                return new StringBuilder().append(menu.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Menu> ApplicationConversionServiceFactoryBean.getIdToMenuConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tiptopchefs.domain.Menu>() {
            public com.tiptopchefs.domain.Menu convert(java.lang.Long id) {
                return Menu.findMenu(id);
            }
        };
    }
    
    public Converter<String, Menu> ApplicationConversionServiceFactoryBean.getStringToMenuConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tiptopchefs.domain.Menu>() {
            public com.tiptopchefs.domain.Menu convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Menu.class);
            }
        };
    }
    
    public Converter<MenuItem, String> ApplicationConversionServiceFactoryBean.getMenuItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tiptopchefs.domain.MenuItem, java.lang.String>() {
            public String convert(MenuItem menuItem) {
                return new StringBuilder().append(menuItem.getName()).append(' ').append(menuItem.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, MenuItem> ApplicationConversionServiceFactoryBean.getIdToMenuItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tiptopchefs.domain.MenuItem>() {
            public com.tiptopchefs.domain.MenuItem convert(java.lang.Long id) {
                return MenuItem.findMenuItem(id);
            }
        };
    }
    
    public Converter<String, MenuItem> ApplicationConversionServiceFactoryBean.getStringToMenuItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tiptopchefs.domain.MenuItem>() {
            public com.tiptopchefs.domain.MenuItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MenuItem.class);
            }
        };
    }
    
    public Converter<MenuItemOrder, String> ApplicationConversionServiceFactoryBean.getMenuItemOrderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.tiptopchefs.domain.MenuItemOrder, java.lang.String>() {
            public String convert(MenuItemOrder menuItemOrder) {
                return new StringBuilder().append(menuItemOrder.getName()).append(' ').append(menuItemOrder.getAddress()).append(' ').append(menuItemOrder.getTotal()).append(' ').append(menuItemOrder.getDeliveryDate()).toString();
            }
        };
    }
    
    public Converter<Long, MenuItemOrder> ApplicationConversionServiceFactoryBean.getIdToMenuItemOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.tiptopchefs.domain.MenuItemOrder>() {
            public com.tiptopchefs.domain.MenuItemOrder convert(java.lang.Long id) {
                return MenuItemOrder.findMenuItemOrder(id);
            }
        };
    }
    
    public Converter<String, MenuItemOrder> ApplicationConversionServiceFactoryBean.getStringToMenuItemOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.tiptopchefs.domain.MenuItemOrder>() {
            public com.tiptopchefs.domain.MenuItemOrder convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MenuItemOrder.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getMenuToStringConverter());
        registry.addConverter(getIdToMenuConverter());
        registry.addConverter(getStringToMenuConverter());
        registry.addConverter(getMenuItemToStringConverter());
        registry.addConverter(getIdToMenuItemConverter());
        registry.addConverter(getStringToMenuItemConverter());
        registry.addConverter(getMenuItemOrderToStringConverter());
        registry.addConverter(getIdToMenuItemOrderConverter());
        registry.addConverter(getStringToMenuItemOrderConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
